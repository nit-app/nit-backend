openapi: 3.0.3
info:
  title: nIT - OpenAPI 3.0
  description: >-
    This is nIT API documentation.
  version: '1.0.0'
servers:
  - url: /v1
tags:
  - name: auth
    description: Auth
  - name: register
    description: Register a new user
  - name: user
    description: Operations about user
  - name: events
    description: Lookup events
paths:
  /auth/sendCode:
    post:
      tags:
        - auth
      summary: Send OTP code
      operationId: authSendCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCodeRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ok'

  /auth/confirm:
    post:
      tags:
        - auth
      summary: Confirm OTP code
      operationId: authConfirmCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmOTPRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ok'

  /auth/revoke:
    get:
      tags:
        - auth
      summary: Deactivate current session token and log out
      operationId: authRevokeSession
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ok'


  /register/sendCode:
    post:
      tags:
        - register
      summary: Send OTP code
      operationId: regSendCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCodeRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ok'

  /register/confirm:
    post:
      tags:
        - register
      summary: Confirm OTP code
      operationId: regConfirmCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmOTPRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ok'

  /register/finish:
    post:
      tags:
        - register
      summary: Complete registration process
      operationId: regFinish
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishRegistrationRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ok'

  /getMe:
    get:
      tags:
        - user
      summary: Get current user profile
      description: Get current user profile
      operationId: getMe
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'

        '401':
          description: Unauthorized
        '400':
          description: Bad request

  /events/lookup:
    post:
      tags:
        - events
      summary: Search for events by filters
      operationId: eventsLookup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventsRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsResponse'

components:
  schemas:

    EventsResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        object:
          type: array
          items:
            $ref: '#/components/schemas/EventHeaderResponse'
        status:
          type: integer
          format: int32
          example: 200

    EventHeaderResponse:
      type: object
      properties:
        uuid:
          type: string
          example: "b141fa84-8e25-11ee-8542-fa163e445fa2"
        title:
          type: string
          example: "Test paid event"
        priceLow:
          type: integer
          example: 100
        priceHigh:
          type: integer
          example: 500
        ageLimitLow:
          type: integer
          example: 12
        ageLimitHigh:
          type: integer
          example: 18
        location:
          type: string
          example: "56.822523, 60.605641 улица Декабристов, 77Б, Екатеринбург, Свердловская область, 620063"
        ownerInfo:
          type: string
          example: "ООО Тестовые Решения"
        hasCertificate:
          type: boolean
        favCount:
          type: integer
        createdAt:
          type: string
          format: date
        modifiedAt:
          type: string
          format: date
        schedule:
          $ref: '#/components/schemas/EventScheduleResponse'
        tags:
          type: array
          items:
            type: string
            example: [ "test", "хакатон", "командное", "соревнование" ]

    EventScheduleResponse:
      type: object
      properties:
        scheduleUUID:
          type: string
        beginsAt:
          type: string
          format: date
        endsAt:
          type: string
          format: date
        addedAt:
          type: string
          format: date

    Ok:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        object:
          type: boolean
          format: boolean
        status:
          type: integer
          format: int32
          example: 200

    StringResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        object:
          type: string
          format: string
        status:
          type: integer
          format: int32
          example: 200


    SendCodeRequest:
      type: object
      required:
        - phoneNumber
      properties:
        phoneNumber:
          type: string
          format: string
          example: '71112223344'

    ConfirmOTPRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          format: number
          example: '5731'

    FinishRegistrationRequest:
      type: object
      required:
        - firstName

      properties:
        firstName:
          type: string
          format: string
          example: 'Ivan'
        lastName:
          type: string
          format: string
          example: 'Petrov'

    EventsRequest:
      type: object
      required:
        - from
        - to
      properties:
        from:
          type: string
          format: date
          example: '2024-06-06T12:00:00+05:00'
        to:
          type: string
          format: date
          example: '2024-06-06T18:00:00+05:00'
        tags:
          type: array
          items:
            type: string
          example: ["test", "хакатон"]
        excludeAgeRestricted:
          type: boolean
          format: boolean
          example: false
        excludePaid:
          type: boolean
          format: boolean
          example: false
